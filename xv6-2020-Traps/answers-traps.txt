RISC-V 汇编分析答案

1. 函数参数传递的寄存器：
   RISC-V 使用 a0-a7 共8个寄存器传递函数参数。在 main 调用 printf 时，
   参数 13 存放在寄存器 a2 中。汇编代码：li a2,13

2. 函数调用位置：
   - 函数 f 的调用：编译器优化（内联），main 中直接计算出 f(8)+1 = 12
   - 函数 g 的调用：内联到 f 函数中，表现为 addiw a0,a0,3 指令

3. printf 函数地址：
   printf 函数位于地址 0x640。
   计算过程：auipc ra,0x0 将当前PC值(0x30)加载到ra，然后 jalr 1552(ra) 
   跳转到 ra + 1552 = 0x30 + 1552 = 0x640 的位置。

4. jalr 调用后 ra 寄存器的值：
   jalr 指令会将下一条指令的地址（PC + 4）保存到 ra 中作为返回地址。
   jalr 指令位于地址 0x34，因此 ra = 0x34 + 4 = 0x38。

5. 小端序代码输出：
   unsigned int i = 0x00646c72;
   printf("H%x Wo%s", 57616, &i);
   
   输出：He110 World
   
   解释：57616 = 0xe110，%x 输出 "e110"；
   i 在小端序内存中存储为：72 6c 64 00，对应ASCII字符 "rld"

6. 大端序情况：
   若为大端序，需要设置 i = 0x726c6400 才能得到相同输出。
   57616 不需要改变，因为数值本身与字节序无关。

7. 参数不足的打印：
   printf("x=%d y=%d", 3);
   
   y= 后面打印的是 a2 寄存器中的值，这是未定义的垃圾数据。
   原因：printf 需要两个参数但只提供了一个，会从 a2 读取第二个参数。
